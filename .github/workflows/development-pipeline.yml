name: Development Pipeline

# =======================================================
# CONFIGURACI√ìN B√ÅSICA DEL PIPELINE DE DESARROLLO
# =======================================================

# Este pipeline se ejecutar√° autom√°ticamente cuando:
# - Se realicen cambios en la rama 'master'
# - O se haya ejecutado exitosamente el pipeline de infraestructura
on:
  push:
    branches:
      - master

  workflow_run:
    workflows: ['Infrastructure Pipeline']
    types:
      - completed # Solo cuando se completa el pipeline de infraestructura

# Variables reutilizables a lo largo del workflow
env:
  ACR_NAME: 'egzmicroserviceappacr.azurecr.io' # Nombre completo del Azure Container Registry (ACR)
  RESOURCE_GROUP: 'microservice-app-rg' # Grupo de recursos de Azure donde est√°n desplegadas las Container Apps
  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS_COLONIA }} # Credenciales de Azure configuradas en GitHub Secrets
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID_COLONIA }} # ID de la suscripci√≥n de Azure configuradas en GitHub Secrets

jobs:
  # ==============================================
  # ETAPA 1: BUILD Y DEPLOY DE MICROSERVICIOS
  # ==============================================
  build_and_deploy:
    name: '1. Build y Deploy de Microservicios'
    runs-on: ubuntu-latest # Agente de ejecuci√≥n (m√°quina virtual en la nube)

    steps:
      # Paso 1: Checkout del c√≥digo
      - name: Checkout repository
        uses: actions/checkout@v4

      # Paso 2: Configurar Azure CLI
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}

      # Paso 3: Login en Azure Container Registry (ACR)
      - name: Login al Azure Container Registry (ACR)
        run: |
          az acr login --name ${ACR_NAME%%.*}

      # Paso 4: Construcci√≥n y publicaci√≥n de im√°genes Docker en el ACR
      - name: Construcci√≥n y publicaci√≥n de im√°genes en ACR
        run: |
          chmod +x ./../../push_images_to_acr.sh
          ./../../push_images_to_acr.sh

      # Paso 5: Actualizaci√≥n de las Azure Container Apps con las nuevas im√°genes
      - name: Despliegue en Azure Container Apps
        run: |
          for SERVICE in auth-api frontend log-message-processor todos-api users-api; do
            echo "üîÑ Actualizando $SERVICE..."
            az containerapp update \
              --name $SERVICE \
              --resource-group $RESOURCE_GROUP \
              --image $ACR_NAME/$SERVICE:latest \
              --subscription $AZURE_SUBSCRIPTION_ID
            echo "‚úÖ $SERVICE actualizado"
            echo "-------------------------------------------"
          done

      # Paso 6: Verificaci√≥n del estado post-despliegue
      - name: Verificaci√≥n del estado post-despliegue
        run: |
          for SERVICE in auth-api frontend log-message-processor todos-api users-api; do
            echo "Estado de $SERVICE:"
            az containerapp show \
              --name $SERVICE \
              --resource-group $RESOURCE_GROUP \
              --query "{name:name, state:properties.latestRevisionFqdn, image:properties.template.containers[0].image}" \
              --subscription $AZURE_SUBSCRIPTION_ID
            echo "-------------------------------------------"
          done
